---
fp_nfsd: false
fp_nfsd_enable: false
fp_nfsd_debug: false

# /etc/export
fp_nfsd_exports: []
# nfsd
fp_nfs_server_flags: -u -t -n 4
fp_nfs_server_managegids: "NO"
fp_nfs_reserved_port_only: "NO"
fp_nfs_bufpackets: ""
fp_weak_mountd_authentication: "NO"
fp_nfsv4_server_enable: "YES"
fp_nfscbd_enable: "NO"
fp_nfscbd_flags: ""
fp_nfsuserd_enable: "NO"
fp_nfsuserd_flags: ""
fp_nfsd_enable_rcconf:
  - { key: nfs_server_enable, value: "YES" }
  - { key: nfs_server_flags, value: "{{ fp_nfs_server_flags }}" }
  - { key: nfs_server_managegids, value: "{{ fp_nfs_server_managegids }}" }
  - { key: nfs_reserved_port_only, value: "{{ fp_nfs_reserved_port_only }}" }
  - { key: nfs_bufpackets, value: "{{ fp_nfs_bufpackets }}" }
  - { key: weak_mountd_authentication, value: "{{ fp_weak_mountd_authentication }}" }
  - { key: nfsv4_server_enable, value: "{{ fp_nfsv4_server_enable }}" }
  - { key: nfscbd_enable, value: "{{ fp_nfscbd_enable }}" }
  - { key: nfscbd_flags, value: "{{ fp_nfscbd_flags }}" }
  - { key: nfsuserd_enable, value: "{{ fp_nfsuserd_enable }}" }
  - { key: nfsuserd_flags, value: "{{ fp_nfsuserd_flags }}" }
fp_nfsd_disable_rcconf:
  - { key: nfs_server_enable, value: "NO" }

# mountd
fp_mountd_enable: false
fp_mountd_flags: -r
fp_mountd_enable_rcconf:
  - { key: mountd_enable, value: "YES" }
  - { key: mountd_flags, value: "{{ fp_mountd_flags }}" }
fp_mountd_disable_rcconf:
  - { key: mountd_enable, value: "NO" }
  - { key: mountd_flags, value: "{{ fp_mountd_flags }}" }

# rpcbind
fp_rpcbind_enable: false
fp_rpcbind_flags: ""
fp_rpcbind_enable_rcconf:
  - { key: rpcbind_enable, value: "YES" }
  - { key: rpcbind_flags, value: "{{ fp_rpcbind_flags }}" }
fp_rpcbind_disable_rcconf:
  - { key: rpcbind_enable, value: "NO" }
  - { key: rpcbind_flags, value: "{{ fp_rpcbind_flags }}" }

# rpc_lockd
fp_rpc_lockd_enable: false
fp_rpc_lockd_flags: ""
fp_rpc_lockd_enable_rcconf:
  - { key: rpc_lockd_enable, value: "YES" }
  - { key: rpc_lockd_flags, value: "{{ fp_rpc_lockd_flags }}" }
fp_rpc_lockd_disable_rcconf:
  - { key: rpc_lockd_enable, value: "NO" }
  - { key: rpc_lockd_flags, value: "{{ fp_rpc_lockd_flags }}" }

# rpc_statd
fp_rpc_statd_enable: false
fp_rpc_statd_flags: ""
fp_rpc_statd_enable_rcconf:
  - { key: rpc_statd_enable, value: "YES" }
  - { key: rpc_statd_flags, value: "{{ fp_rpc_statd_flags }}" }
fp_rpc_statd_disable_rcconf:
  - { key: rpc_statd_enable, value: "NO" }
  - { key: rpc_statd_flags, value: "{{ fp_rpc_statd_flags }}" }

# handlers
fp_nfsd_services: [nfsd, mountd, rpcbind, lockd, statd]
fp_nfsd_handlers:
  nfsd: "{{ (fp_nfsd_services_status.nfsd | d('stopped') == 'running') | ternary('restart nfsd', 'start nfsd') }}"
  mountd: "{{ (fp_nfsd_services_status.mountd | d('stopped') == 'running') | ternary('reload mountd', 'start mountd') }}"
  rpcbind: "{{ (fp_nfs_services_status.rpcbind | d('stopped') == 'running') | ternary('restart rpcbind', 'start rpcbind') }}"
  lockd: "{{ (fp_nfs_services_status.lockd | d('stopped') == 'running') | ternary('restart lockd', 'start lockd') }}"
  statd: "{{ (fp_nfs_services_status.statd | d('stopped') == 'running') | ternary('restart statd', 'start statd') }}"

# EOF
