---
- name: Rcconf
  vars:
    _path: "{{ fp_rcconfd | bool | ternary(fp_rcconfd_path.apcupsd, '/etc/rc.conf') }}"
  tags: fp_apcupsd_rcconf
  block:

    - name: "Apcupsd: Enable and start apcupsd in {{ _path }}"
      when: fp_apcupsd_enabled | bool
      notify: enable and start apcupsd
      community.general.sysrc:
        path: "{{ _path }}"
        name: apcupsd_enable
        value: "YES"

    - name: "Apcupsd: Disable and stop apcupsd in {{ _path }}"
      when: not fp_apcupsd_enabled | bool
      notify: disable and stop apcupsd
      community.general.sysrc:
        path: "{{ _path }}"
        name: apcupsd_enable
        value: "NO"

- name: Conf
  tags: fp_apcupsd_conf
  block:

    - name: "Apcupsd: Create directory {{ fp_apcupsd_conf_dir }}"
      ansible.builtin.file:
        state: directory
        path: "{{ fp_apcupsd_conf_dir }}"
        mode: "{{ fp_apcupsd_conf_dir_mode }}"

    - name: "Apcupsd: Configure apcupsd.conf"
      notify: restart apcupsd
      ansible.builtin.template:
        src: apcupsd.conf.j2
        dest: "{{ fp_apcupsd_conf_file }}"
        owner: "{{ fp_apcupsd_conf_owner }}"
        group: "{{ fp_apcupsd_conf_group }}"
        mode: "{{ fp_apcupsd_conf_mode }}"
        backup: "{{ fp_backup }}"

- name: "Apcupsd: Service apcupsd {{ state }}"
  tags: fp_apcupsd_service
  ansible.builtin.service:
    name: apcupsd
    state: "{{ state }}"
  vars:
    state: "{{ fp_apcupsd_enabled | bool | ternary('started', 'stopped') }}"

# EOF
