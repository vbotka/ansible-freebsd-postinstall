---
- name: "Devfs: Debug fp_devfs_debug={{ fp_devfs_debug }}"
  when: fp_devfs_debug | bool
  tags: fp_devfs_debug
  vars:
    msg: |-
      fp_devfs_enable: {{ fp_devfs_enable }}
      fp_devfs_notify: {{ fp_devfs_notify }}
      fp_devfs_service_task: {{ fp_devfs_service_task }}
      fp_devfs_rcconf:
        {{ fp_devfs_rcconf | to_yaml(indent=2) | indent(2) }}

      fp_devfs_load_rulesets: {{ fp_devfs_load_rulesets }}
      fp_devfs_system_ruleset: {{ fp_devfs_system_ruleset }}
      fp_devfs_rulesets: {{ fp_devfs_rulesets }}
      fp_devfs_set_rulesets: {{ fp_devfs_set_rulesets }}
      fp_devfs_conf_path: {{ fp_devfs_conf_path }}
      fp_devfs_conf:
        {{ fp_devfs_conf | to_yaml(indent=2) | indent(2) }}
      fp_devfs_rules_path: {{ fp_devfs_rules_path }}
      fp_devfs_rules_mode: {{ fp_devfs_rules_mode }}
      fp_devfs_rules:
        {{ fp_devfs_rules | to_yaml(indent=2) | indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: "Devfs: Configure {{ fp_devfs_conf_path }}"
  tags: fp_devfs_conf
  ansible.builtin.lineinfile:
    dest: "{{ fp_devfs_conf_path }}"
    regexp: ^\s*{{ item.action }}\s+{{ item.devname }}\s+{{ item.arg }}
    line: "{{ item.action }} {{ item.devname }} {{ item.arg }}"
    backup: "{{ fp_backup }}"
  loop: "{{ fp_devfs_conf }}"

- name: "Devfs: Configure {{ fp_devfs_rules_path }}"
  tags: fp_devfs_rules
  community.general.ini_file:
    path: "{{ fp_devfs_rules_path }}"
    create: true
    mode: "{{ fp_devfs_rules_mode }}"
    allow_no_value: true
    owner: "{{ fp_devfs_owner }}"
    group: "{{ fp_devfs_group }}"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value | d(omit) }}"
    state: "{{ item.state | d('present') }}"
    backup: "{{ fp_backup }}"
  loop: "{{ fp_devfs_rules }}"

- name: "Devfs: Configure rc.conf"
  tags: fp_devfs_rcconf
  vars:
    _service: devfs
  ansible.builtin.import_tasks: fn/rcconf.yml

# EOF
