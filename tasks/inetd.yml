---
- name: "Inetd: Debug fp_inetd_debug={{ fp_inetd_debug }}"
  when: fp_inetd_debug | bool
  tags: fp_inetd_debug
  vars:
    msg: |-
      fp_inetd_enabled: {{ fp_inetd_enabled }}
      fp_inetd_rcconf:
        {{ fp_inetd_rcconf | to_nice_yaml(indent=2) | indent(2) }}
      fp_inetd_conf_orig: {{ fp_inetd_conf_orig }}
      fp_inetd_conf:
        {{ fp_inetd_conf | to_nice_yaml(indent=2) | indent(2) }}
      fp_inetd_hosts_allow_file: {{ fp_inetd_hosts_allow_file }}
      fp_inetd_hosts_allow_orig: {{ fp_inetd_hosts_allow_orig }}
      fp_inetd_hosts_allow_template: {{ fp_inetd_hosts_allow_template }}
      fp_inetd_hosts_allow_conf:
        {{ fp_inetd_hosts_allow_conf | to_yaml(indent=2) | indent(2) }}
      fp_inetd_syslogd_confd:
        {{ fp_inetd_syslogd_confd | to_nice_yaml(indent=2) | indent(2) }}
      fp_inetd_syslogd_newconfd:
        {{ fp_inetd_syslogd_newconfd | to_nice_yaml(indent=2) | indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: Configure /etc/rc.conf
  vars:
    _path: "{{ fp_rcconfd | bool | ternary(fp_rcconfd_path.inetd, '/etc/rc.conf') }}"
  tags: fp_inetd_rcconf
  block:

    - name: "Inetd: Configure {{ _path }}"
      notify: restart inetd
      community.general.sysrc:
        path: "{{ _path }}"
        name: "{{ item.key }}"
        value: "{{ item.value | d(omit) }}"
        state: "{{ item.state | d(omit) }}"
      loop: "{{ fp_inetd_rcconf }}"

    - name: "Inetd: Enable and start inetd in {{ _path }}"
      when: fp_inetd_enabled | bool
      notify: enable and start inetd
      community.general.sysrc:
        path: "{{ _path }}"
        name: inetd_enable
        value: "YES"

    - name: "Inetd: Disable and stop inetd in {{ _path }}"
      when: not fp_inetd_enabled | bool
      notify: disable and stop inetd
      community.general.sysrc:
        path: "{{ _path }}"
        name: inetd_enable
        value: "NO"

- name: Configure syslog
  block:

    - name: "Inetd: Create logfile {{ fp_inetd_logfile }}"
      when: fp_inetd_logfile | length > 0
      tags: fp_inetd_logfile
      ansible.builtin.file:
        state: touch
        access_time: preserve
        modification_time: preserve
        path: "{{ fp_inetd_logfile }}"
        owner: root
        group: wheel
        mode: "0644"

    - name: "Inetd: Create files in /etc/syslog.d/"
      tags: fp_inetd_syslogd
      notify: reload syslogd
      vars:
        fp_syslogd_conf: "{{ item.conf }}"
      ansible.builtin.template:
        src: "{{ item.template }}"
        dest: /etc/syslog.d/{{ item.path }}
        owner: root
        group: wheel
        mode: "0644"
        backup: "{{ fp_backup }}"
      loop: "{{ fp_inetd_syslogd_confd }}"
      loop_control:
        label: "{{ item.path }}"

    - name: "Inetd: Create files in /etc/newsyslog.conf.d/"
      tags: fp_inetd_syslogd_newconfd
      notify: create newsyslog
      vars:
        fp_syslogd_newconf: "{{ item.conf }}"
      ansible.builtin.template:
        src: "{{ item.template }}"
        dest: /etc/newsyslog.conf.d/{{ item.path }}
        owner: root
        group: wheel
        mode: "0644"
        backup: "{{ fp_backup }}"
      loop: "{{ fp_inetd_syslogd_newconfd }}"
      loop_control:
        label: "{{ item.path }}"

- name: Backup orig files
  block:

    - name: "Inetd: Backup origin /etc/inetd.conf"
      when: fp_inetd_conf_orig | bool
      tags: fp_inetd_conf_orig
      ansible.builtin.command:
        cmd: cp /etc/inetd.conf /etc/inetd.conf.orig
        creates: /etc/inetd.conf.orig

  # TODO:
  # - name: "inetd: Configure /etc/inetd.conf"
  #   ansible.builtin.template:
  #     src: inetd.conf.j2
  #     dest: /etc/inetd.conf
  #     owner: root
  #     group: wheel
  #     mode: '0644'
  #     backup: "{{ fp_backup }}"
  #   notify: reload inetd
  #   when: fp_inetd_conf|length > 0
  #   tags: fp_inetd_conf

    - name: "Inetd: Backup origin {{ fp_inetd_hosts_allow_file }}"
      when: fp_inetd_hosts_allow_orig | bool
      tags: fp_inetd_hosts_allow_orig
      ansible.builtin.command:
        cmd: cp {{ fp_inetd_hosts_allow_file }} {{ fp_inetd_hosts_allow_file }}.orig
        creates: "{{ fp_inetd_hosts_allow_file }}.orig"

- name: "Inetd: Configure {{ fp_inetd_hosts_allow_file }}"
  when: fp_inetd_hosts_allow_conf | length > 0
  tags: fp_inetd_hosts_allow
  notify: reload inetd
  ansible.builtin.template:
    src: "{{ fp_inetd_hosts_allow_template }}"
    dest: "{{ fp_inetd_hosts_allow_file }}"
    owner: root
    group: wheel
    mode: "0644"
    backup: "{{ fp_backup }}"

- name: "Inetd: inetd {{ state }}"
  tags: fp_inetd_service
  vars:
    state: "{{ fp_inetd_enabled | bool | ternary('started', 'stopped') }}"
  ansible.builtin.service:
    name: inetd
    state: "{{ state }}"

# EOF
