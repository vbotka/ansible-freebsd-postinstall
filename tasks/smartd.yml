---
- name: Congigure /etc/rc.conf
  tags: fp_smartd_rcconf
  block:

    - name: "Smartd: Enable and start smartd"
      when: fp_smartd_enabled | bool
      notify: enable and start smartd
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*smartd_enable\s*=(.*)$
        line: smartd_enable="YES"
        backup: "{{ fp_backup }}"

    - name: "Smartd: Disable and stop smartd"
      when: not fp_smartd_enabled | bool
      notify: disable and stop smartd
      ansible.builtin.lineinfile:
        dest: /etc/rc.conf
        regexp: ^\s*smartd_enable\s*=(.*)$
        line: smartd_enable="NO"
        backup: "{{ fp_backup }}"

- name: Configure smartd
  tags: fp_smartd_conf
  notify: reload smartd
  block:

    - name: "Smartd: Configure smartd.conf"
      ansible.builtin.lineinfile:
        dest: "{{ fp_smartd_conf_file }}"
        regexp: ^\s*DEVICESCAN(.*)$
        state: absent
        backup: "{{ fp_backup }}"

    - name: "Smartd: Configure devices in {{ fp_smartd_conf_file }}"
      ansible.builtin.lineinfile:
        create: true
        dest: "{{ fp_smartd_conf_file }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: "{{ item.state | d(omit) }}"
        owner: "{{ fp_smartd_conf_owner }}"
        group: "{{ fp_smartd_conf_group }}"
        mode: "{{ fp_smartd_conf_mode }}"
        backup: "{{ fp_backup }}"
      loop: "{{ fp_smartd_devices }}"

- name: "Smartd: smartd {{ state }}"
  tags: fp_smartd_service
  vars:
    state: "{{ fp_smartd_enabled | bool | ternary('started', 'stopped') }}"
  ansible.builtin.service:
    name: smartd
    state: "{{ state }}"

# EOF
