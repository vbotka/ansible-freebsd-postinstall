---
- name: "Nfs: Debug fp_nfs_debug={{ fp_nfs_debug }}"
  when: fp_nfs_debug | bool
  tags: fp_nfs_debug
  vars:
    msg: |-
      fp_nfs_enable: {{ fp_nfs_enable }}
      fp_nfs_enable_rcconf:
        {{ fp_nfs_enable_rcconf | to_yaml(indent=2) | indent(2) }}
      fp_nfs_disable_rcconf:
        {{ fp_nfs_disable_rcconf | to_yaml(indent=2) | indent(2) }}
      fp_rpc_lockd_enable: {{ fp_rpc_lockd_enable }}
      fp_rpc_lockd_flags: {{ fp_rpc_lockd_flags }}
      fp_rpc_lockd_enable_rcconf:
        {{ fp_rpc_lockd_enable_rcconf | to_yaml(indent=2) | indent(2) }}
      fp_rpc_lockd_disable_rcconf:
        {{ fp_rpc_lockd_disable_rcconf | to_yaml(indent=2) | indent(2) }}
      fp_rpc_statd_enable: {{ fp_rpc_statd_enable }}
      fp_rpc_statd_flags: {{ fp_rpc_statd_flags }}
      fp_rpc_statd_enable_rcconf:
        {{ fp_rpc_statd_enable_rcconf | to_yaml(indent=2) | indent(2) }}
      fp_rpc_statd_disable_rcconf:
        {{ fp_rpc_statd_disable_rcconf | to_yaml(indent=2) | indent(2) }}
      fp_nfs_service_paths:
        {{ fp_nfs_service_paths | to_nice_yaml(indent=2) | indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

  # Note: The module service_facts doesn't work in FreeBSD.
- name: "Nfs: Service state info"
  tags: fp_nfs_services
  vars:
    al_bsd_service_paths: "{{ fp_nfs_service_paths }}" # noqa: var-naming[no-role-prefix]
  ansible.builtin.include_role:
    name: vbotka.ansible_lib
    tasks_from: al_bsd_service_facts
    apply:
      tags: fp_nfs_services

  # Note: There is no status option of nfsclient. If needed, restart the
  # service when /var/db/mounttab exists.
- name: Debug
  tags: fp_nfs_services
  block:

    - name: "Nfs: Stat /var/db/mounttab"
      register: fp_nfs_var_db_mounttab
      ansible.builtin.stat:
        path: /var/db/mounttab

    - name: "Nfs: Debug service state info fp_nfs_debug={{ fp_nfs_debug }}"
      when: fp_nfs_debug | bool
      ansible.builtin.debug:
        var: al_ansible_facts_services

    - name: "Nfs: Debug stat /var/db/mounttab fp_nfs_debug={{ fp_nfs_debug }}"
      when: fp_nfs_debug | bool
      ansible.builtin.debug:
        var: fp_nfs_var_db_mounttab.stat.exists

    - name: "Nfs: Debug handlers fp_nfs_debug={{ fp_nfs_debug }}"
      when: fp_nfs_debug | bool
      ansible.builtin.debug:
        var: fp_nfs_handlers

- name: "Nfs: Enable services"
  tags: fp_nfs_enable
  ansible.builtin.include_tasks:
    file: fn/rcconf-item.yml
  loop: "{{ fp_nfs_services_enable | selectattr('when') }}"
  loop_control:
    loop_var: oi
    label: "{{ oi.label }}"

- name: "Nfs: Disable services"
  tags: fp_nfs_disable
  ansible.builtin.include_tasks:
    file: fn/rcconf-item.yml
  loop: "{{ fp_nfs_services_disable | selectattr('when') }}"
  loop_control:
    loop_var: oi
    label: "{{ oi.label }}"

# EOF
